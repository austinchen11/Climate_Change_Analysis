[["results.html", "Chapter 4 Results 4.1 GDP 4.2 Population 4.3 Air Pollution 4.4 Carbon Dioxide 4.5 Temperature Change 4.6 Sea Level Change 4.7 Temperature Change and GDP 4.8 Temperature Change and Population 4.9 Temperature Change, Population, GDP 4.10 Sea Level Change and Sea Ice 4.11 Temperature Change and Greenhouse Gases", " Chapter 4 Results 4.1 GDP df_gdp &lt;- read.csv(&quot;data/gdp.csv&quot;) top10_gdp_2021 &lt;- df_gdp[df_gdp$Subject == &quot;Gross Domestic Product (GDP); millions&quot; &amp; df_gdp$TIME == 2021 &amp; df_gdp$Measure == &quot;USD, current prices, current PPPs&quot;,] top10_gdp_2021[ order(top10_gdp_2021$Value,decreasing = TRUE), ][0:14,] ## LOCATION Country SUBJECT ## 44648 OECD OECD - Total T_GDP ## 43634 G-7 G7 T_GDP ## 23980 USA United States T_GDP ## 50643 EU27_2020 European Union – 27 countries (from 01/02/2020) T_GDP ## 47400 EA19 Euro area (19 countries) T_GDP ## 26702 IND India T_GDP ## 11669 JPN Japan T_GDP ## 6828 DEU Germany T_GDP ## 27030 IDN Indonesia T_GDP ## 5944 FRA France T_GDP ## 24710 BRA Brazil T_GDP ## 23096 GBR United Kingdom T_GDP ## 10785 ITA Italy T_GDP ## 14279 MEX Mexico T_GDP ## Subject MEASURE ## 44648 Gross Domestic Product (GDP); millions CPC ## 43634 Gross Domestic Product (GDP); millions CPC ## 23980 Gross Domestic Product (GDP); millions CPC ## 50643 Gross Domestic Product (GDP); millions CPC ## 47400 Gross Domestic Product (GDP); millions CPC ## 26702 Gross Domestic Product (GDP); millions CPC ## 11669 Gross Domestic Product (GDP); millions CPC ## 6828 Gross Domestic Product (GDP); millions CPC ## 27030 Gross Domestic Product (GDP); millions CPC ## 5944 Gross Domestic Product (GDP); millions CPC ## 24710 Gross Domestic Product (GDP); millions CPC ## 23096 Gross Domestic Product (GDP); millions CPC ## 10785 Gross Domestic Product (GDP); millions CPC ## 14279 Gross Domestic Product (GDP); millions CPC ## Measure TIME Time Unit.Code Unit ## 44648 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 43634 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 23980 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 50643 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 47400 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 26702 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 11669 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 6828 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 27030 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 5944 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 24710 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 23096 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 10785 USD, current prices, current PPPs 2021 2021 USD US Dollar ## 14279 USD, current prices, current PPPs 2021 2021 USD US Dollar ## PowerCode.Code PowerCode Reference.Period.Code Reference.Period Value ## 44648 6 Millions 67273433 ## 43634 6 Millions 45020341 ## 23980 6 Millions 23315100 ## 50643 6 Millions 21759094 ## 47400 6 Millions 17495016 ## 26702 6 Millions 9856675 ## 11669 6 Millions 5400596 ## 6828 6 Millions 4857465 ## 27030 6 Millions 3566265 ## 5944 6 Millions 3447940 ## 24710 6 Millions 3435882 ## 23096 6 Millions 3286242 ## 10785 6 Millions 2723375 ## 14279 6 Millions 2609520 ## Flag.Codes Flags ## 44648 ## 43634 ## 23980 ## 50643 ## 47400 ## 26702 ## 11669 ## 6828 ## 27030 ## 5944 ## 24710 ## 23096 ## 10785 ## 14279 From the GDP dataset, we found that the top ten countries which have the highest GDP in 2021 (in USD, current prices, current PPPs) are: USA, India, Japan, Germany, Indonesia, France, Brazil, UK, Italy, Mexico. The dataset doesn’t contain China’s GDP value in 2021 (but does contain from 1970-2020); this is not reflected as a null value in the dataset. Since China’s GDP is also among the highest in the world before, we decided to include 11 countries: USA, India, Japan, Germany, Indonesia, France, Brazil, UK, Italy, Mexico, and China in our future analysis. country_gdp = c(&quot;United States&quot;, &quot;India&quot;, &quot;Japan&quot;, &quot;Germany&quot;, &quot;Indonesia&quot;, &quot;France&quot;, &quot;Brazil&quot;, &quot;United Kingdom&quot;, &quot;Italy&quot;, &quot;Mexico&quot;, &quot;China (People&#39;s Republic of)&quot;) fig_gdp2 &lt;- ggplot( subset(df_gdp, Country %in% country_gdp &amp; Subject %in% &quot;Gross Domestic Product (GDP); millions&quot; &amp; Measure %in% &quot;USD, current prices, current PPPs&quot;), aes(x = Time, y = Value, color = Country, group = Country)) + geom_line() + labs(title = &quot;GDP from 1970 - 2021&quot;, x = &quot;Year&quot;, y = &quot;GDP&quot;) plot(fig_gdp2) From the plot, we can see that China and US’s GDP are much higher than other countries from 2010 to present. China’s GDP is relatively low before 1990, but it grows rapidly and exceeds US’s GDP from 2017 until present. India’s GDP is also growing rapidly in recent years. Other countries’ GDP are growing steadily. 4.2 Population fig_pop1 &lt;- ggplot( subset(df_gdp, Country %in% country_gdp &amp; Subject %in% &quot;Total population; persons; thousands&quot;), aes(x = Time, y = Value, color = Country, group = Country)) + geom_line() + labs(title = &quot;Population from 1970 - 2021&quot;, x = &quot;Year&quot;, y = &quot;Population&quot;) plot(fig_pop1) China and India are the top 2 countries which have highest population and population growth rate from 1970 to 2021. China has about 1.42 billion people and India has 1.41 billion in 2021. US, Indonesia, and Brazil ranks the 3rd, 4th, and 5th by population. Other countries’ population grows steadily. 4.3 Air Pollution air_combined &lt;- read.csv(&quot;data/air_combined.csv&quot;) ggplot( air_combined, aes(x = factor(year), y = value, color = country, group = country)) + geom_line() + labs(title = &quot;Air Pollution from 2010 - 2021&quot;, x = &quot;Year&quot;, y = &quot;PM 2.5 concentration (μg/m3)&quot;) ggplot( air_combined, aes(x = year, y = value, color = country, group = country)) + geom_line() + facet_wrap(~country) + labs(title = &quot;Air Pollution from 2010 - 2021&quot;, x = &quot;Year&quot;, y = &quot;PM 2.5 concentration (μg/m3)&quot;) There is a jump in India’s PM2.5 concentration before and after 2017, and the data is missing before 2016. It is reasonable that the data are inconsistent since the dataset is combined from two datasets. The data from other countries are consistent. From the IQAir website, the PM2.5 concentration from 0-5 μg/m3 meets WHO guidelines. We can see that China is the most polluted country before 2017, but the air pollution index continues decreasing and in 2021, China’s PM2.5 index is 32.6 μg/m3. India and Indonesia are the top 2 most polluted countries in 2021, with PM2.5 concentration 58.1 and 34.3 μg/m3. Other countries have relatively low air pollution. Our analysis of this graph focus on the impact of Covid-19 on air pollution. Since during the pandemic, there are less outside activities. We compare the data before and after 2019 and see if there is a decreasing trend after Covid-19, as we expected. China and Indonesia’s air pollution value decrease rapidly; Brazil, Italy, Japan, and Mexico have a slight decrease; France, Germany, UK are steady; India and US’s air pollution value increase. The trend and the impact of Covid-19 are different for each country. Air pollution values are affected by multiple factors. 4.4 Carbon Dioxide ## read in the data and peform some basic transformation and cleanings world_co2 = read.csv(&#39;data/Atmospheric_CO%E2%82%82_Concentrations.csv&#39;, stringsAsFactors = TRUE) world_co2 = world_co2[, -c(1, 3, 4, 5, 7, 8, 9, 10)] world_co2 = world_co2[world_co2$Unit == &quot;Parts Per Million&quot;, ] world_co2$Date = gsub(&quot;M&quot;,&quot;-&quot;, world_co2$Date) # plot the co2 concentration of the entire period g1 = ggplot(data = world_co2, aes(x = Date, y = Value)) + geom_point() + labs(title = &quot;World Carbon Dioxide Concentration From 1958 to 2022&quot;, x = &quot;Year&quot;, y = &quot;Carbon Dioxide (Parts per Million)&quot;) new_c02 = world_co2[731:774,] new_c02$Date = paste(new_c02$Date, &quot;-01&quot;, sep = &quot;&quot;) # plot the co2 concentration of the subset of years, in order to view the monthly seasonality g2 = ggplot(data = new_c02, aes(x = as.Date(Date), y = Value)) + geom_point() + labs(title = &quot;World Carbon Dioxide Concentration From 2019 to 2022&quot;, x = &quot;Year&quot;, y = &quot;Carbon Dioxide (Parts per Million)&quot;) ## arrange in a grid gridExtra::grid.arrange(g1, g2, nrow = 1) One of the most indicative measurements to showcase Earth’s gradually changing climate is the concentration of carbon dioxide (taken at Mauna Loa, Hawaii). Since 1958, Mauna Loa was chosen as a long term monitoring site, due to its lack of vegetation and remote location far from other continents. As shown in the graphs above, the carbon dioxide concentration in the atmosphere has increased from around 313 parts per million in 1958 to over 420 parts per million in 2022. This increase can be attributed to the release of fossil fuels in the atmosphere, which has accelerated since the industrial revolution, and is one of contributors to global warming. In addition to the general pattern of increase exhibited by the graph on the left, the graph on the right displays the seasonality of carbon dioxide data. This curve (known as the Keeling Curve) shows a cyclic variation of about 6 ppm each calendar year, with a peak in May and a minimum in September. The variation is due to the uptake of carbon dioxide by the world’s land vegetation; from the maximum in May, the concentration decreases as new plant growth during Northern hemisphere’s spring and summer absorbs carbon dioxide through Photosynthesis. This set of graphs also allows us to preface the analysis of this project - since climate data is inherently “noisy” and oftentimes seasonal, it is important to keep that in mind as you read through the document, as some patterns or conclusions may not be as definitive as we would have liked. Nonetheless, we do hope that this project serves it educational purpose on the factors that may affect climate change. 4.5 Temperature Change # read in the data and perform some basic transformations and cleaning temp_change = read.csv(&#39;data/Annual_Surface_Temperature_Change.csv&#39;, stringsAsFactors = TRUE) temp_change = temp_change[, -c(3, 4, 5, 6 ,7 ,8 ,9, 10)] temp_change = temp_change[, -c(1)] temp_change_removed = na.omit(temp_change) # import reshape2 library(reshape2) # make the temperature change data set into a form that can be graphed as a time series df_temp &lt;- melt(subset(temp_change_removed, Country %in% c(&#39;United States&#39;, &#39;India&#39;, &#39;Japan&#39;, &#39;Germany&#39;, &#39;Indonesia&#39;, &#39;France&#39;, &#39;Brazil&#39;, &#39;United Kingdom&#39;, &#39;Italy&#39;, &#39;Mexico&#39;, &#39;China, P.R.: Mainland&#39;)), id.vars=c(&quot;Country&quot;),value.name=&quot;Value&quot;, variable.name=&quot;Year&quot;) # define the subset of the top 11 GDP countries in the world df_temp_subset = subset(df_temp, Country %in% c(&#39;United States&#39;, &#39;India&#39;, &#39;Japan&#39;, &#39;Germany&#39;, &#39;Indonesia&#39;, &#39;France&#39;, &#39;Brazil&#39;, &#39;United Kingdom&#39;, &#39;Italy&#39;, &#39;Mexico&#39;, &#39;China, P.R.: Mainland&#39;)) # clean the formatting of the years column df_temp_subset$Year = substring(df_temp_subset$Year, 2) # use groupby to create the average of each country (may or may not be used later) df_temp_subset_average = df_temp_subset %&gt;% group_by(Country) %&gt;% summarise(average = mean(Value)) # plot the subset ggplot(data=df_temp_subset, aes(x=as.numeric(Year), y=Value, group = Country, colour = Country)) + geom_line() + geom_point() + xlab(&#39;Year&#39;) + ylab(&quot;Temperature Change in Degrees Celsius &quot;) + ggtitle(&quot;Temperature Change of 11 Countries (Top GDPs) from 1961-2021&quot;) # plot is using a boxplot ggplot(data = df_temp_subset, aes(x = reorder(Country, Value, median), y = Value)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90)) library(ggridges) ggplot(data = df_temp_subset, aes(y= Country , x = Value)) + geom_density_ridges(alpha=0.5) 4.6 Sea Level Change # read in the data and perform some basic transformations and cleaning sea_level_change_ok = read.csv(&quot;data/Change_in_Mean_Sea_Levels.csv&quot;, stringsAsFactors = TRUE) sea_level_change = sea_level_change_ok[, -c(1:10)] sea_level_change$Date = substring(sea_level_change$Date, 2) sea_level_change$Date = gsub(&quot;/&quot;, &quot;-&quot;, sea_level_change$Date) sea_level_change$Date = as.Date(sea_level_change$Date, format = &quot;%m-%d-%Y&quot;) # plot the data using a boxplot ggplot(data = sea_level_change, aes(x = reorder(Measure, Value, median), y = Value)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90)) + xlab(&quot;Measurements of Oceans and Seas&quot;) + ylab(&quot;Mean Sea Level Change (millimeters&quot;) # define a new dataframe to transform interactive_sea = sea_level_change interactive_sea$Date = substr(interactive_sea$Date, 1, 4) # transform into something graphable interactive_sea_tidy = interactive_sea %&gt;% group_by(Date, Measure) %&gt;% summarise(Sea_lvl_change = mean(Value)) # plot that transformed data ggplot(data = interactive_sea_tidy, aes(x = as.numeric(Date), y = Sea_lvl_change, group = Measure, colour = Measure)) + geom_line() + xlab(&quot;Measurements of Oceans and Seas&quot;) + ylab(&quot;Mean Sea Level Change (millimeters&quot;) ggplot(data = interactive_sea_tidy, aes(y= Measure , x = Sea_lvl_change)) + geom_density_ridges(alpha=0.5) 4.7 Temperature Change and GDP ## make copies and redefine data sets in order to merge temperature change and gdp together df_temp_subset_1970 = df_temp_subset[df_temp_subset$Year &gt;= 1970,] df_temp_subset_1970$Country = as.character(df_temp_subset_1970$Country) df_temp_subset_1970$Country[df_temp_subset_1970$Country == &quot;China, P.R.: Mainland&quot;] = &quot;China (People&#39;s Republic of)&quot; df_gdp_chen = subset(df_gdp, Country %in% country_gdp &amp; Subject %in% &quot;Gross Domestic Product (GDP); millions&quot; &amp; Measure %in% &quot;USD, current prices, current PPPs&quot;) df_temp_subset_1970$Country = as.factor(df_temp_subset_1970$Country) # merge the data sets temperature_gdp = merge(df_temp_subset_1970, df_gdp_chen, by.x = c(&quot;Country&quot;, &#39;Year&#39;), by.y = c(&#39;Country&#39;, &quot;Time&quot;)) # plot it faceted on the countries ggplot(data = temperature_gdp, aes(x = Value.y, y = Value.x)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_wrap(~Country, scale=&quot;free_x&quot;) + xlab(&quot;GDP&quot;) + ylab(&quot;Temperature Change in Degrees Celsius&quot;) # plot the general scatterplot, without faceting ggplot(data = temperature_gdp, aes(x = Value.y, y = Value.x,)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + xlab(&quot;GDP&quot;) + ylab(&quot;Temperature Change in Degrees Celsius&quot;) The graphs above were generated by merging the temperature change data set with the GDP data set, each of the data points represents the pair of values (GDP, temperature change) of each country associated with a given year. Before even conducting the analysis, logic informs us that there should be a positive relationship between the GDP and mean temperature change of a country, since a higher GDP typically relates to more production power, more technological advancements, more fossil fuel burning, and a higher output of global warming inducing gases. However, on the other hand, one could make an argument that countries with a higher GDP have better resources for combating and mitigating temperature regulation. Referring back to the individual GDP analysis above, China and the United State’s GDP are magnitudes higher than the other countries’, therefore, to make the graph readable, a scale of “free_x” was used. The resulting faceted graph shows quite a clear relationship between GDP and temperature: as the GDP of a country increases, the mean temperature change also increases. This aligns with the initial logic outlined above. Furthermore, while some countries’ (Brazil and Indonesia) may not exhibit a high slope like the others (France, Italy, US), there is still a relatively strong positive relationship. Therefore, with a degree of confidence, our group concludes that there is a positive correlation between the GDP and temperature change of a country (exhibited with the data we collected, cleaned, and transformed). However, like I prefaced in the beginning of this project, climate data is inherently noisy, and incredibly dynamic; so it is entirely possible we may have missed some confounder variable that is contributing to this correlation. 4.8 Temperature Change and Population # merge the data sets of temperature change and population df_population = subset(df_gdp, Country %in% country_gdp &amp; Subject %in% &quot;Total population; persons; thousands&quot;) temperature_population = merge(df_temp_subset_1970, df_population, by.x = c(&quot;Country&quot;, &#39;Year&#39;), by.y = c(&#39;Country&#39;, &quot;Time&quot;)) # plot it faceted on the different countries ggplot(data = temperature_population, aes(x = Value.y, y = Value.x)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_wrap(~Country, scale=&quot;free_x&quot;) + xlab(&quot;Population&quot;) + ylab(&quot;Temperature Change in Degrees Celsius&quot;) # plot it without faceting on the countries ggplot(data = temperature_population, aes(x = Value.y, y = Value.x)) + geom_point() + xlab(&quot;Population&quot;) + ylab(&quot;Temperature Change in Degrees Celsius&quot;) Similar with the temperature change v.s GDP plot above, this graph was also generated by merging the respective data sets. Each of the data points from the faceted graph above represents the pair of values (population, temperature change) of each country associated with a given year. Before even conducting the analysis, we hypothesized that there would be a positive relationship between the population and the temperature change of a country. This initial guess aligns perfectly well with logic, now let us see if our data supports this. Referring back to the individual population analysis above, it can be observed that China and India have populations that are magnitudes higher than all of the other countries, so again, in order to make our graphs readable, a scale of “free_x” is used. The resulting faceted graph shows quite a clear positive relationship for all 11 of the countries. One can even make an argument that the correlation is stronger in this graph than the previous one of GDP v.s temperature change. Our gathered data and analysis supports the conclusion that there is a semi-strong positive correlation between the population and the temperature change of a country. 4.9 Temperature Change, Population, GDP library(GGally) temp_gdp_pollution = merge(temperature_gdp, df_population, by.x = c(&quot;Country&quot;, &#39;Year&#39;), by.y = c(&#39;Country&#39;, &quot;Time&quot;)) temp_gdp_pollution = temp_gdp_pollution[, c(1, 2, 3, 16, 31)] colnames(temp_gdp_pollution) = c(&quot;Country&quot;, &quot;Year&quot;, &quot;Temperature Change&quot;, &quot;GDP&quot;, &quot;Population&quot;) ggparcoord(temp_gdp_pollution, columns = 3:5, alpha = 0.5) ggparcoord(log(temp_gdp_pollution[, c(3,4, 5)]), alpha = 0.5, scale = &quot;uniminmax&quot;) ggplot(data = temp_gdp_pollution, aes (x = Population, y = GDP)) + geom_point() 4.10 Sea Level Change and Sea Ice # read in the sea ice data df_icevolume &lt;- read.csv(&quot;Kelly_draft/PIOMAS_monthly.csv&quot;) df_icevolume[&quot;average&quot;] = rowMeans(df_icevolume[, -c(1)]) # perform a series of groupbys in order to get the data into a format that can be successfullt merged with the sea level change data defined earlier sl_group = sea_level_change %&gt;% group_by(Date) %&gt;% summarize(mean_change = mean(Value)) sl_group_new = sl_group sl_group_new$Date = substring(sl_group_new$Date, 1, 4) sl_group_new_tidy = sl_group_new %&gt;% group_by(Date) %&gt;% summarise(average = mean(mean_change)) colnames(sl_group_new_tidy) = c(&quot;year&quot;, &#39;Average_SL_Change&#39;) # plot the sea level change i1 = ggplot(data = sl_group_new_tidy, aes(x = as.numeric(year), y = Average_SL_Change)) + geom_point() + xlab(&quot;Year&quot;) + ylab(&quot;Sea Level Change (millimeters)&quot;) + ggtitle(&quot;Changes in Mean Sea Level from 1992 to 2022&quot;) df_icevolume_new = df_icevolume df_icevolume_new = df_icevolume_new[df_icevolume_new$year &gt;= 1992, ] ice_sea = merge(sl_group_new_tidy, df_icevolume_new, by = &quot;year&quot;) # plot the merged data and fit it with a regression line ggplot(data = ice_sea, aes(average, Average_SL_Change)) + geom_point() + geom_smooth(method = &quot;lm&quot;, se = FALSE) + xlab(&quot;Changes in Sea Ice&quot;) + ylab(&quot;Mean Sea Level Change&quot;) + ggtitle(&quot;Scatterplot of Mean Sea Level Change v.s Sea Ice Change (1992-2021)&quot;) # plot the sea ice change fig3_icevolume &lt;- ggplot(df_icevolume, aes(x=year,y=average)) + geom_point() + ggtitle(&quot;Change in Ice Volume&quot;) + xlab(&quot;Year&quot;) + ylab(&quot;Ice Volume&quot;) gridExtra::grid.arrange(i1, fig3_icevolume, nrow = 1) 4.11 Temperature Change and Greenhouse Gases df_temp_subset_1990 = df_temp_subset df_temp_subset_1990 = df_temp_subset_1990[df_temp_subset_1990$Year &gt;= 1990,] df_temp_subset_1990$Country = as.character(df_temp_subset_1990$Country) df_temp_subset_1990$Country[df_temp_subset_1990$Country == &quot;China, P.R.: Mainland&quot;] = &quot;China&quot; df_ghg &lt;- read.csv(&quot;Kelly_draft/ghg.csv&quot;) ghg_chen = subset(df_ghg, Country %in% c(&quot;China&quot;,&quot;United States&quot;,&quot;India&quot;,&quot;France&quot;,&quot;Japan&quot;,&quot;Germany&quot;,&quot;Italy&quot;,&quot;United Kingdom&quot;,&quot;Mexico&quot;,&quot;Indonesia&quot;)) ghg_chen &lt;- ghg_chen %&gt;% mutate_all(as.character) %&gt;% pivot_longer(cols = -c(&quot;Country&quot;,&quot;Data.source&quot;,&quot;Sector&quot;,&quot;Gas&quot;,&quot;Unit&quot;), names_to = &quot;Year&quot;, values_to = &quot;value&quot;, names_prefix = &quot;X&quot;) temp_ghg = merge(df_temp_subset_1990, ghg_chen, by.x = c(&quot;Country&quot;, &quot;Year&quot;), by.y = c(&quot;Country&quot;, &quot;Year&quot;)) temp_ghg$Year = as.factor(temp_ghg$Year) ggplot(data = temp_ghg, aes(x = Value, y = as.numeric(value))) + geom_line() + facet_wrap(~Country,scale=&quot;free_y&quot;) ggplot(data = temp_ghg, aes(x = Value, y = as.numeric(value))) + geom_point() df_ghg &lt;- read.csv(&quot;Kelly_draft/ghg.csv&quot;) df_ghg1 &lt;- subset(df_ghg, Country %in% c(&quot;China&quot;,&quot;United States&quot;,&quot;India&quot;,&quot;France&quot;,&quot;Japan&quot;,&quot;Germany&quot;,&quot;Italy&quot;,&quot;United Kingdom&quot;,&quot;Mexico&quot;,&quot;Indonesia&quot;,&quot;Brazil&quot;)) df_ghg2 &lt;- df_ghg1 %&gt;% mutate_all(as.character) %&gt;% pivot_longer(cols = -c(&quot;Country&quot;,&quot;Data.source&quot;,&quot;Sector&quot;,&quot;Gas&quot;,&quot;Unit&quot;), names_to = &quot;Year&quot;, values_to = &quot;value&quot;, names_prefix = &quot;X&quot;) fig_ghg2 &lt;- ggplot(df_ghg2, aes(x=Year,y=as.numeric(value), color=Country,group=Country)) + geom_line() + geom_point() + theme(axis.text.x = element_text(angle = 90)) + ggtitle(&#39;Changes in Green House Gas&#39;) + xlab(&#39;Year&#39;) plot(fig_ghg2) Since the 20th century, the greenhouse gases produced by human activity have been the major cause of climate change. The excess of greenhouse gases in the atmosphere would disrupt the earth’s carbon cycle and also hasten global warming. These 11 countries account for around 60% of global greenhouse gas emissions, whereas the 100 lowest emitters only contributed about 3%. From this plot, we can see that the greenhouse gas emissions from China and United States are much higher than other countries, and China had a huge jump throughout these years while other countries remain steadily. We know that the majority of the world’s greenhouse gas emissions comes from transportation, electricity generation, agriculture and other forms of energy use. United States is the word’s largest economy throughout years. This results in the greenhouse gas emissions of United States is higher than other developed and developing countries from 1990-2019 but within a relatively steady range. On the other hand, the greenhouse gas emissions from China keeps increasing and reaches the highest level in 2019. This increase can be attributed to the economy development happened in China. China’s economy has grown to one of the largest and most powerful in the world over the past few decades. The extraordinary urbanization boom in China has accelerated greenhouse gas emissions. Cement and steel production, which have fueled China’s infrastructure development, both emit significant amounts of CO2 during the refining process. ggplot(df_ghg2,aes(x=Year,y=as.numeric(value),fill=Country))+geom_bar(stat=&#39;identity&#39;) fig2_ghg_country &lt;- ggplot(df_ghg2, aes(x=Year,y=as.numeric(value), group=Country)) + geom_line() + geom_point() + theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~Country, scale=&quot;free_y&quot;,nrow=5) + ggtitle(&#39;Changes in Green House Gas by Countries&#39;) From the graph above, we can see that most developed countries are decreasing their greehhouse gas emmision, while developing countries tends to have a continous increasing. There are two unusual behavors in Brazil and Japan. In 2010, the greenhouse gas emmision of Brazil has a sharp drop. The greenhouse gas emmision of Japan has dropped from 2007 and reached the lowest in 2009. After 2009, it has a rapid increasing until 2013. This can be attributed to the economy crisis happened in 2008 and 2009. During that period of time, the Japanese economy shrunk and the Tokyo stock market crashed. The GDP of Japan only grew around 1%. Due to the economy crsis, the greenhouse gas emmision of Japan dropped hard. df_forest &lt;- read.csv(&quot;Kelly_draft/forest.csv&quot;) df_forest1 &lt;- subset(df_forest, Area %in% c(&quot;China&quot;,&quot;United States of America&quot;,&quot;India&quot;,&quot;France&quot;,&quot;Japan&quot;,&quot;Germany&quot;,&quot;Italy&quot;,&quot;United Kingdom&quot;,&quot;Mexico&quot;,&quot;Indonesia&quot;,&quot;Brazil&quot;) &amp; Item %in% &quot;Forestland&quot; &amp; Element %in% &quot;Area&quot; &amp; Source %in% &quot;FAO TIER 1&quot;) fig1_forest &lt;- ggplot(df_forest1, aes(x=Year,y=as.numeric(Value),group=Area)) + geom_line() + geom_point() + facet_wrap(~Area, scale=&quot;free_y&quot;) + ggtitle(&#39;Changes in Forest Area&#39;) + xlab(&#39;Year&#39;) + ylab(&#39;Forest Area / 1000 ha&#39;) plot(fig1_forest) "],["agriculture.html", "Chapter 5 Agriculture", " Chapter 5 Agriculture df_landuse &lt;- read.csv(&quot;Kelly_draft/landuse.csv&quot;) df_landuse_Agriculture &lt;- subset(df_landuse, Area %in% c(&quot;China&quot;,&quot;United States of America&quot;,&quot;India&quot;,&quot;France&quot;,&quot;Japan&quot;,&quot;Germany&quot;,&quot;Italy&quot;,&quot;United Kingdom&quot;,&quot;Mexico&quot;,&quot;Indonesia&quot;,&quot;Brazil&quot;) &amp; Item %in% &quot;Agriculture&quot;) fig4_Agriculture_country &lt;- ggplot(df_landuse_Agriculture, aes(x=Year,y=as.numeric(Value),group=Area)) + geom_line() + geom_point() + facet_wrap(~Area, scale=&quot;free_y&quot;) + theme(axis.text.x = element_text(angle = 90)) + ggtitle(&#39;Changes in Agricultural Area by Countries&#39;) plot(fig4_Agriculture_country) From our analysis to greenhouse gases, in 2010, the greenhouse gas emission of Brazil has a sharp drop. This may attribute to the changes in forest land and agricultural area in Brazil. Brazil has the world’s largest remaining tropical forest, accounting for roughly one-third of all remaining rain forests. The major sources of Brazil’s greenhouse gas emission are land-use change and the agriculture. From the graph of changes in forest area, we can tell that from 2010, the rate of deforestation in Brazil has continued to fall However, even thought Brazil succeed in reducing deforestation, the emissions from agriculture and other industries are rising. Based on the graph of changes in agricultural area, we see that land used for agriculture is increasing a lot. This might attribute to the continuous increasing in greenhouse gases after the sharp drop. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
